pipeline {
    agent any
    
    environment {
        currentWorkspace = ''
    }

    stages {
        stage('API Automation') {
            agent {
                dockerfile {
                    filename 'Dockerfile'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                script {
                    currentWorkspace = "$WORKSPACE"
                    echo "Current workspace is ${currentWorkspace}"
                }
                sh 'mvn test -Dcucumber.filter.tags="@API"'
            }
        }
        stage('Generate HTML reports') {
            steps {
                reuseNode true

                cucumber buildStatus: '',
                        reportTitle: 'Cucumber report',
                        fileIncludePattern: '**/*.json',
                        //jsonReportDirectory: "./target",
                        jsonReportDirectory: "${currentWorkspace}/target",
                        trendsLimit: 10,
                        classifications: [
                                [
                                        'key'  : 'API',
                                        'value': 'API'
                                ]
                        ]

                // publish html
                publishHTML target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: "${currentWorkspace}/target/Reports/",
                        reportFiles: 'automated-test-report.html',
                        reportName: 'Extent Test Report'
                ]

                publishHTML target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: "${currentWorkspace}/target/cucumber-html-report/",
                        reportFiles: 'regression-tests.html',
                        reportName: 'Cucumber Test Report'
                ]
            }
        }
    }

    post {
        always {
            sh 'docker rm -f $(docker ps -aq)'
            cleanWs()
        }
    }

}